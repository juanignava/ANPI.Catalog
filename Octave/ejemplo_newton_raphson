function ejemplo_newton_raphson()
  
  % Ejemplo numérico del método de Newton Raphson
  
  clc; clear;
  
  f = '(cos(2*x))**2-x^2';
  x0 = 3;
  tol = 10^-9;
  iterMax = 1000;
  
  [xk error] = newton_raphson(f, x0, tol, iterMax)
  
end

function [xk error] = newton_raphson(f, x0, tol, iterMax)
  
  % Esta función implementa el método de Newton-Raphson, el cual, permite
  % aproximar la solución de una ecuación no lineal al aproximar el cero de
  % la función sin tener que utilizar el Teorema de Bolzano.
  
  % Parámetros de entrada:    f es una cadena caracteres (string) que simboliza 
  %                           la ecuacion no lineal a aproximar sel cero.
  
  %                           x0 es eñ valor inicial para evaluar la función
  
  %                           tol representa la tolerancia del método la cual, 
  %                           nos permite tener una condición de parada
  
  %                           iterMax es la cantidad máxima de iteraciones para 
  %                           evaluar la función
  
  
  % Parámetro de salida:      xk es el resultado de aproximación del cero 
  %                           de la función
  %
  %                           error es error relativo del cero aproximado
  
  e = [];
  error = tol + 1
  
  pkg load symbolic
  
  syms x;
  
  f = inline(f);
  d= diff(f);
  
  d= inline(de);
  
  
  xk = x0;
  
  for n = 0: iterMax
    
    xk = xk - (f(xk) / d(xk));
    error = abs(f(xk));
    e = [e error];
    
    if error<tol
     break
    endif
     
  end
  
  plot(0:length(e)-1, e)
  title('Grado del polinomio vrs error relativo')
  xlabel('Grado del polinomio (k)')
  ylabel('Error relativo')
  
end